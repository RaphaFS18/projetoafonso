# API REST Tests - Sistema de Biblioteca
# Arquivo para testar todas as rotas da aplicação

### VARIÁVEIS ###
@baseUrl = http://localhost:3000/api

### ROTAS DE AUTORES ###

# Listar todos os autores
GET {{baseUrl}}/autores
Accept: application/json

###

# Buscar autor por ID (substitua pelo ID real do seu banco)
GET {{baseUrl}}/autores/1
Accept: application/json

###

# Criar novo autor
POST {{baseUrl}}/autores
Content-Type: application/json

{
  "nome": "jorge de Assis",
  "nacionalidade": "Espanhol",
  "data_nascimento": "1839-06-21"
}

###

# Atualizar autor (substitua pelo ID real)
PUT {{baseUrl}}/autores/1
Content-Type: application/json

{
  "nome": "Machado de jorge Assis",
  "nacionalidade": "USA",
  "data_nascimento": "1839-06-21"
}

###

# Deletar autor (substitua pelo ID real)
DELETE {{baseUrl}}/autores/1
Accept: application/json

###

# Buscar autores por nacionalidade
GET {{baseUrl}}/autores/nacionalidade?nacionalidade=Brasileiro
Accept: application/json

###

# Buscar autores com seus livros
GET {{baseUrl}}/autores/com-livros
Accept: application/json

###

### ROTAS DE CATEGORIAS ###

# Listar todas as categorias
GET {{baseUrl}}/categorias
Accept: application/json

###

# Buscar categoria por ID
GET {{baseUrl}}/categorias/1
Accept: application/json

###

# Criar nova categoria
POST {{baseUrl}}/categorias
Content-Type: application/json

{
  "nome": "Aventura",
  "descricao": "Livros de romance e ficção"
}

###

# Atualizar categoria
PUT {{baseUrl}}/categorias/1
Content-Type: application/json

{
  "nome": "Romance Clássico",
  "descricao": "Livros de romance clássico da literatura"
}

###

# Deletar categoria
DELETE {{baseUrl}}/categorias/1
Accept: application/json

###

# Buscar categoria por nome
GET {{baseUrl}}/categorias/buscar?nome=Romance
Accept: application/json

###

# Buscar categorias com seus livros
GET {{baseUrl}}/categorias/com-livros
Accept: application/json

###

# Buscar livros por categoria
GET {{baseUrl}}/categorias/1/livros
Accept: application/json

###

### ROTAS DE LIVROS ###

# Listar todos os livros
GET {{baseUrl}}/livros
Accept: application/json

###

# Buscar livro por ID
GET {{baseUrl}}/livros/2
Accept: application/json

###

# Criar novo livro
POST {{baseUrl}}/livros
Content-Type: application/json

{
  "titulo": "Dom Casmurro",
  "isbn": "978-85-260-1234-5",
  "ano_publicacao": 1899,
  "autor_id": 1
}

###

# Atualizar livro
PUT {{baseUrl}}/livros/1
Content-Type: application/json

{
  "titulo": "Dom Casmurro - Edição Revisada",
  "isbn": "978-85-260-1234-5",
  "ano_publicacao": 1899,
  "autor_id": 1
}

###

# Deletar livro
DELETE {{baseUrl}}/livros/1
Accept: application/json

###

# Buscar livros por ano
GET {{baseUrl}}/livros/ano?ano=1899
Accept: application/json

###

# Buscar livro por ISBN
GET {{baseUrl}}/livros/isbn?isbn=978-85-260-1234-5
Accept: application/json

###

# Buscar livros por autor
GET {{baseUrl}}/livros/autor/1
Accept: application/json

###

# Buscar livro com suas categorias
GET {{baseUrl}}/livros/1/categorias
Accept: application/json

###

### ROTAS DE ASSOCIAÇÕES LIVRO-CATEGORIA ###

# Listar todas as associações
GET {{baseUrl}}/livro-categoria
Accept: application/json

###

# Buscar associação por ID
GET {{baseUrl}}/livro-categoria/1
Accept: application/json

###

# Associar livro a categoria
POST {{baseUrl}}/livro-categoria/associar
Content-Type: application/json

{
  "livro_id": 1,
  "categoria_id": 1
}

###

# Remover associação específica
DELETE {{baseUrl}}/livro-categoria/remover
Content-Type: application/json

{
  "livro_id": 1,
  "categoria_id": 1
}

###

# Buscar categorias de um livro
GET {{baseUrl}}/livro-categoria/livro/1/categorias
Accept: application/json

###

# Buscar livros de uma categoria
GET {{baseUrl}}/livro-categoria/categoria/1/livros
Accept: application/json

###

# Remover todas as categorias de um livro
DELETE {{baseUrl}}/livro-categoria/livro/1/todas-categorias
Accept: application/json

###

# Remover todos os livros de uma categoria
DELETE {{baseUrl}}/livro-categoria/categoria/1/todos-livros
Accept: application/json

###

# Deletar associação por ID
DELETE {{baseUrl}}/livro-categoria/1
Accept: application/json

###

### TESTES DE ERRO ###

# Teste com ID inválido
GET {{baseUrl}}/autores/999999
Accept: application/json

###

# Teste POST com dados inválidos (sem nome do autor)
POST {{baseUrl}}/autores
Content-Type: application/json

{
  "nacionalidade": "Brasileiro"
}

###

# Teste POST livro sem autor_id
POST {{baseUrl}}/livros
Content-Type: application/json

{
  "titulo": "Livro Sem Autor",
  "isbn": "123-456-789"
}

###

# Teste de rota inexistente
GET {{baseUrl}}/inexistente
Accept: application/json

###

# Teste de método não permitido
PATCH {{baseUrl}}/autores
Content-Type: application/json

{
  "nome": "Teste"
}

###

### TESTES ESPECÍFICOS DE QUERY PARAMETERS ###

# Teste busca por nacionalidade sem parâmetro
GET {{baseUrl}}/autores/nacionalidade
Accept: application/json

###

# Teste busca por ano sem parâmetro
GET {{baseUrl}}/livros/ano
Accept: application/json

###

# Teste busca por ISBN sem parâmetro
GET {{baseUrl}}/livros/isbn
Accept: application/json

###

# Teste busca categoria por nome sem parâmetro
GET {{baseUrl}}/categorias/buscar
Accept: application/json

###